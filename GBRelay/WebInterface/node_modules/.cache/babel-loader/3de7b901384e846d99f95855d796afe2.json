{"ast":null,"code":"const fromHexString=hexString=>new Uint8Array(hexString.match(/.{1,2}/g).map(byte=>parseInt(byte,16)));function buf2hex(buffer){// buffer is an ArrayBuffer\nreturn[...new Uint8Array(buffer)].map(x=>x.toString(16).padStart(2,'0')).join('');}const toHexString=bytes=>bytes.reduce((str,byte)=>str+byte.toString(16).padStart(2,'0'),'');class Serial{constructor(){this.buffer=[];this.buffer_in=[];this.buffer_out=[];this.send_active=false;}static getPorts(){return navigator.usb.getDevices().then(devices=>{return devices;});}static requestPort(){const filters=[{'vendorId':0x239A},// Adafruit boards\n{'vendorId':0xcafe}// TinyUSB example\n];return navigator.usb.requestDevice({'filters':filters}).then(device=>{return device;});}getEndpoints(interfaces){interfaces.forEach(element=>{var alternates=element.alternates;alternates.forEach(elementalt=>{if(elementalt.interfaceClass===0xFF){console.log(\"Interface number:\");console.log(element.interfaceNumber);this.ifNum=element.interfaceNumber;elementalt.endpoints.forEach(elementendpoint=>{if(elementendpoint.direction===\"out\"){console.log(\"Endpoint out: \");console.log(elementendpoint.endpointNumber);this.epOut=elementendpoint.endpointNumber;}if(elementendpoint.direction===\"in\"){console.log(\"Endpoint in: \");console.log(elementendpoint.endpointNumber);this.epIn=elementendpoint.endpointNumber;}});}});});}getDevice(){let device=null;this.ready=false;return new Promise((resolve,reject)=>{Serial.requestPort().then(dev=>{console.log(\"Opening device...\");device=dev;this.device=device;return dev.open();}).then(()=>{console.log(\"Selecting configuration\");return device.selectConfiguration(1);}).then(()=>{console.log(\"Getting endpoints\");this.getEndpoints(device.configuration.interfaces);}).then(()=>{console.log(\"Claiming interface\");return device.claimInterface(this.ifNum);}).then(()=>{console.log(\"Select alt interface\");return device.selectAlternateInterface(this.ifNum,0);}).then(()=>{console.log(\"Control Transfer Out\");return device.controlTransferOut({'requestType':'class','recipient':'interface','request':0x22,'value':0x01,'index':this.ifNum});}).then(()=>{console.log(\"Ready!\");this.ready=true;this.device=device;resolve();});});}read(num){return new Promise((resolve,reject)=>{this.device.transferIn(this.epIn,num).then(result=>{resolve(result);},error=>{console.log(\"Error\");console.log(error);reject(error);});});}readHex(num){return new Promise((resolve,reject)=>{this.read(num).then(result=>{console.log(\"RES\");console.log(result.data.buffer);resolve(buf2hex(result.data.buffer));},error=>{reject(error);});});}readString(){this.device.transferIn(this.epIn,64).then(result=>{console.log(\"ReadResult\");console.log(result);let textDecoder=new TextDecoder();return textDecoder.decode(result.data);},error=>{console.log(\"ReadError\");console.log(error);});}sendString(str){return this.send(new TextEncoder('utf-8').encode(str));}sendHex(str){return this.send(fromHexString(str));}send(data){return this.device.transferOut(this.epOut,data);}bufSendFunction(){this.send_active=true;if(this.buffer.length===0){this.send_active=false;return;}var element=this.buffer.shift();var data=element[0];var delay=element[1];this.send(data).then(()=>{setTimeout(()=>{this.bufSendFunction();},delay);});}bufSend(data,delay){this.buffer.push([data,delay]);// Sender is not active, create new one\nif(!this.send_active){this.bufSendFunction();}}bufSendHex(str,delay){var data=fromHexString(str);this.bufSend(data,delay);}receiveFromOtherGB(data){this.buffer_in.push(data);}receiveFromMyGB(){this.device.transferIn(this.epIn,64).then(result=>{this.buffer_out.push(result.data);});}sendToMyGB(){if(this.buffer_in.length>0)this.device.controleTransferOut(this.epOut,this.buffer_in.pop());}}export{Serial};","map":{"version":3,"names":["fromHexString","hexString","Uint8Array","match","map","byte","parseInt","buf2hex","buffer","x","toString","padStart","join","toHexString","bytes","reduce","str","Serial","constructor","buffer_in","buffer_out","send_active","getPorts","navigator","usb","getDevices","then","devices","requestPort","filters","requestDevice","device","getEndpoints","interfaces","forEach","element","alternates","elementalt","interfaceClass","console","log","interfaceNumber","ifNum","endpoints","elementendpoint","direction","endpointNumber","epOut","epIn","getDevice","ready","Promise","resolve","reject","dev","open","selectConfiguration","configuration","claimInterface","selectAlternateInterface","controlTransferOut","read","num","transferIn","result","error","readHex","data","readString","textDecoder","TextDecoder","decode","sendString","send","TextEncoder","encode","sendHex","transferOut","bufSendFunction","length","shift","delay","setTimeout","bufSend","push","bufSendHex","receiveFromOtherGB","receiveFromMyGB","sendToMyGB","controleTransferOut","pop"],"sources":["/home/kali/Project/GameBoyRelay/GBRelay/WebInterface/src/serial.js"],"sourcesContent":["\nconst fromHexString = hexString =>\n    new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n\n\n\nfunction buf2hex(buffer) { // buffer is an ArrayBuffer\n    return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');\n  }\n  \nconst toHexString = bytes =>\n    bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\nclass Serial {\n    constructor() {\n        this.buffer = [];\n\tthis.buffer_in = [];\n        this.buffer_out = [];\n        this.send_active = false;\n\t\n    }\n\n    static getPorts() {\n        return navigator.usb.getDevices().then(devices => {\n            return devices;\n        });\n    }\n\n    static requestPort() {\n        const filters = [\n            { 'vendorId': 0x239A }, // Adafruit boards\n            { 'vendorId': 0xcafe }, // TinyUSB example\n        ];\n        return navigator.usb.requestDevice({ 'filters': filters }).then(\n            device => {\n                return device;\n            }\n        );\n    }\n\n    getEndpoints(interfaces) {\n        interfaces.forEach(element => {\n            var alternates = element.alternates;\n            alternates.forEach(elementalt => {\n                if (elementalt.interfaceClass === 0xFF) {\n                    console.log(\"Interface number:\");\n                    console.log(element.interfaceNumber);\n                    this.ifNum = element.interfaceNumber;\n                    elementalt.endpoints.forEach(elementendpoint => {\n                        if (elementendpoint.direction === \"out\") {\n                            console.log(\"Endpoint out: \");\n                            console.log(elementendpoint.endpointNumber);\n                            this.epOut = elementendpoint.endpointNumber;\n                        }\n\n                        if (elementendpoint.direction === \"in\") {\n                            console.log(\"Endpoint in: \");\n                            console.log(elementendpoint.endpointNumber);\n                            this.epIn = elementendpoint.endpointNumber;\n                        }\n                    });\n                }\n            })\n        })\n    }\n\n    getDevice() {\n        let device = null;\n        this.ready = false;\n        return new Promise((resolve, reject) => {\n            Serial.requestPort().then(dev => {\n                console.log(\"Opening device...\");\n                device = dev;\n                this.device = device;\n                return dev.open();\n            }).then(() => {\n                console.log(\"Selecting configuration\");\n                return device.selectConfiguration(1);\n            }).then(() => {\n                console.log(\"Getting endpoints\")\n                this.getEndpoints(device.configuration.interfaces);\n            }).then(() => {\n                console.log(\"Claiming interface\");\n                return device.claimInterface(this.ifNum);\n            }).then(() => {\n                console.log(\"Select alt interface\");\n                return device.selectAlternateInterface(this.ifNum, 0);\n            }).then(() => {\n                console.log(\"Control Transfer Out\");\n                return device.controlTransferOut({\n                    'requestType': 'class',\n                    'recipient': 'interface',\n                    'request': 0x22,\n                    'value': 0x01,\n                    'index': this.ifNum\n                })\n            }).then(() => {\n                console.log(\"Ready!\");\n                this.ready = true;\n                this.device = device;\n                resolve();\n            })\n        });\n    }\n\n    read(num) {\n        return new Promise((resolve, reject) => {\n            this.device.transferIn(this.epIn, num).then(result => {\n                resolve(result);\n            },\n            error => {\n                console.log(\"Error\");\n                console.log(error);\n                reject(error);\n            });\n        });\n    }\n\n    readHex(num) {\n        return new Promise((resolve, reject) => {\n            this.read(num).then(result => {\n                console.log(\"RES\");\n                console.log(result.data.buffer);\n                resolve(buf2hex(result.data.buffer));\n            },\n            error => {\n                reject(error);\n            })\n        });\n    }\n\n    readString() {\n        this.device.transferIn(this.epIn, 64).then(result => {\n            console.log(\"ReadResult\");\n            console.log(result);\n            let textDecoder = new TextDecoder();\n            return textDecoder.decode(result.data);\n        },\n            error => {\n                console.log(\"ReadError\");\n                console.log(error);\n            })\n    }\n\n    sendString(str) {\n        return this.send(new TextEncoder('utf-8').encode(str));\n    }\n\n    sendHex(str) {\n        return this.send(fromHexString(str));\n    }\n\n    send(data) {\n        return this.device.transferOut(this.epOut, data);\n    }\n\n    bufSendFunction() {\n        this.send_active = true;\n        if(this.buffer.length === 0) {\n            this.send_active = false;\n            return;\n        }\n        var element = this.buffer.shift();\n        var data = element[0];\n        var delay = element[1];\n        this.send(data).then(() => {\n            setTimeout(() => {\n                this.bufSendFunction();\n            }, delay);\n        });\n    }\n\n    bufSend(data, delay) {\n        this.buffer.push([data, delay]);\n        // Sender is not active, create new one\n        if(!this.send_active) {\n            this.bufSendFunction();\n        }\n    }\n\n    bufSendHex(str, delay) {\n        var data = fromHexString(str);\n        this.bufSend(data, delay);\n    }\n\n    receiveFromOtherGB(data) {\n        this.buffer_in.push(data);\n    }\n\n    receiveFromMyGB()\n    {\n            this.device.transferIn(this.epIn, 64).then(result => {\n               this.buffer_out.push(result.data);\n            });\n    }\n\n    sendToMyGB() {\n        if(this.buffer_in.length > 0)\n                this.device.controleTransferOut(this.epOut, this.buffer_in.pop());\n    }\n}\n\nexport { Serial };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}