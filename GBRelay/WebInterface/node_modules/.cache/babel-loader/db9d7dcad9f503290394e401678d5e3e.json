{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import'bootstrap/dist/css/bootstrap.min.css';import'bootstrap/dist/js/bootstrap.js';import'bootstrap/dist/js/bootstrap.bundle';import'./index.css';import SocketIO from'socket.io-client';import{Serial}from'./serial.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";global.jQuery=require('jquery');require('bootstrap');const HOSTSTATIC=\"127.0.0.1\";class OnlineGBGame extends React.Component{constructor(props){super(props);console.log(\"Component init...\");console.log(\"Set State to 0\");this.state=0;this.master=1;this.gbdatain=\"None\";this.gbdataout=\"None\";console.log(\"Creating GBWebsocket ...\");this.ws=new SocketIO.connect(\"https://\"+HOSTSTATIC+\":8080\");}handleC(){// Handle create (master mode)\nconsole.log('Click create');console.log(\"Creating serial ...\");this.serial=new Serial();console.log(\"Initializing websocket gymnastic ! (onmessage function)\");console.log(\"Getting device ...\");this.serial.getDevice().then(()=>{this.state=1;console.log(\"Usb connected, updating status.\");this.connectionMaster();}).catch(c=>{console.log(\"CATTTCH \"+c);});}handleJ(){// Handle Join (master mode off)\nconsole.log('Click create');console.log(\"Creating serial ...\");this.serial=new Serial();console.log(\"Initializing websocket gymnastic ! (onmessage function)\");console.log(\"Getting device ...\");this.serial.getDevice().then(()=>{this.state=1;console.log(\"Usb connected, updating status.\");this.master=0;this.connectionNotMaster();}).catch(c=>{console.log(\"CATTTCH \"+c);});}connectionNotMaster(){let counter=0;console.log(\"Wait for receiving first message ...\");this.setState({state:1});this.ws.on(\"message\",(msg,serverOffset)=>{console.log(\"Got message \"+msg+\" from \"+serverOffset);this.gbdatain=msg;this.setState({gbdatain:msg});console.log(\"Communicating to my GB ...\");this.serial.sendHex(this.gbdatain);this.ws.auth.serverOffset=serverOffset;var clientOffset=this.ws.id+\"-\"+counter++;this.gbdataout=this.serial.readHex();this.setState({gbdataout:this.gbdataout});console.log(\"Sending to other GB \"+this.gbdataout+\" from my GB...\");this.ws.emit('message',{text:JSON.parse(this.gbdataout),name:'GB'+this.ws.id,id:this.ws.id+\"\"+Math.random(),socketID:this.ws.id});console.log(\"Exchange \"+counter+\" : OK.\");});}connectionMaster(){let counter=0;console.log(\"Initiatting my first message ...\");var clientOffset=this.ws.id+\"-\"+counter++;this.gbdataout=this.serial.readHex();this.setState({gbdataout:this.gbdataout,state:1});console.log(\"Sending to other GB \"+this.gbdataout+\" from my GB...\");this.ws.emit('message',{text:JSON.parse(this.gbdataout),name:'GB'+this.ws.id,id:this.ws.id+\"\"+Math.random(),socketID:this.ws.id});console.log(\"First Exchange : OK.\");this.ws.on(\"message\",(msg,serverOffset)=>{console.log(\"Got message \"+msg+\" from \"+serverOffset);this.gbdatain=msg;this.setState({gbdatain:msg});console.log(\"Communicating to my GB ...\");this.serial.sendHex(this.gbdatain);this.ws.auth.serverOffset=serverOffset;var clientOffset=this.ws.id+\"-\"+counter++;this.gbdataout=this.serial.readHex();this.setState({gbdataout:this.gbdataout});console.log(\"Sending to other GB \"+this.gbdataout+\" from my GB...\");this.ws.emit('message',{text:JSON.parse(this.gbdataout),name:'GB'+this.ws.id,id:this.ws.id+\"\"+Math.random(),socketID:this.ws.id});console.log(\"Exchange \"+counter+\" : OK.\");});}render(){if(this.state===0)return/*#__PURE__*/_jsxs(\"div\",{className:\"connect\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>this.handleC(),className:\"btn btn-lg btn-secondary\",children:\"Host (Master)\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>this.handleJ(),className:\"btn btn-lg btn-secondary\",children:\"Connect (Client)\"})]});else if(this.state===1)return/*#__PURE__*/_jsx(\"div\",{className:\"connect\",children:/*#__PURE__*/_jsxs(\"h4\",{children:[\"Connected => IN \",this.gbdatain.toString(),\" OUT \",this.gbdataout.toString()]})});}}// ========================================\nReactDOM.render(/*#__PURE__*/_jsx(OnlineGBGame,{}),document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","SocketIO","Serial","jsx","_jsx","jsxs","_jsxs","global","jQuery","require","HOSTSTATIC","OnlineGBGame","Component","constructor","props","console","log","state","master","gbdatain","gbdataout","ws","connect","handleC","serial","getDevice","then","connectionMaster","catch","c","handleJ","connectionNotMaster","counter","setState","on","msg","serverOffset","sendHex","auth","clientOffset","id","readHex","emit","text","JSON","parse","name","Math","random","socketID","render","className","children","onClick","e","toString","document","getElementById"],"sources":["/home/kali/Project/GameBoyRelay/GBRelay/WebInterface/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport './index.css';\n\nimport SocketIO from 'socket.io-client';\nimport { Serial } from './serial.js';\nglobal.jQuery = require('jquery');\nrequire('bootstrap');\n\nconst HOSTSTATIC = \"127.0.0.1\"; \n\nclass OnlineGBGame extends React.Component {\n  constructor(props)\n  {\n   super(props);\n   console.log(\"Component init...\");\n   console.log(\"Set State to 0\");\n   this.state = 0;\n   this.master = 1;\n   this.gbdatain = \"None\";\n   this.gbdataout = \"None\";\n   console.log(\"Creating GBWebsocket ...\");\n   this.ws = new SocketIO.connect(\"https://\"+HOSTSTATIC+\":8080\");\n  }\n\n  handleC() { // Handle create (master mode)\n    console.log('Click create');\n      console.log(\"Creating serial ...\");\n      this.serial = new Serial();\n      console.log(\"Initializing websocket gymnastic ! (onmessage function)\");\n      console.log(\"Getting device ...\");\n      this.serial.getDevice().then(() => {\n        this.state = 1;\n        console.log(\"Usb connected, updating status.\");\n        this.connectionMaster();\n      }).catch(c => {\n        console.log(\"CATTTCH \"+c);\n      });\n  }\n  \n  handleJ() { // Handle Join (master mode off)\n   console.log('Click create');\n      console.log(\"Creating serial ...\");\n      this.serial = new Serial();\n      console.log(\"Initializing websocket gymnastic ! (onmessage function)\");\n      console.log(\"Getting device ...\");\n      this.serial.getDevice().then(() => {\n        this.state = 1;\n        console.log(\"Usb connected, updating status.\");\n        this.master = 0;\n\tthis.connectionNotMaster();\n      }).catch(c => {\n        console.log(\"CATTTCH \"+c);\n      });\n  }\n\n  connectionNotMaster()\n  {\n   \tlet counter = 0;\n        console.log(\"Wait for receiving first message ...\");\n        this.setState({\n                state: 1\n        });\n        this.ws.on(\"message\", (msg, serverOffset) => {\n                console.log(\"Got message \"+msg+\" from \"+serverOffset);\n                this.gbdatain = msg;\n                this.setState({\n                        gbdatain: msg\n                });\n                console.log(\"Communicating to my GB ...\");\n                this.serial.sendHex(this.gbdatain);\n                this.ws.auth.serverOffset = serverOffset;\n                var clientOffset = this.ws.id+\"-\"+(counter++);\n                this.gbdataout = this.serial.readHex();\n                this.setState({\n                        gbdataout: this.gbdataout\n                });\n                console.log(\"Sending to other GB \"+this.gbdataout+\" from my GB...\");\n                this.ws.emit('message', { text:JSON.parse(this.gbdataout), name: 'GB'+this.ws.id, id: this.ws.id+\"\"+Math.random(), socketID: this.ws.id});\n                console.log(\"Exchange \"+counter+\" : OK.\");\n        });\n  }\n\n  connectionMaster() {\n\tlet counter = 0;\n\tconsole.log(\"Initiatting my first message ...\");\n\tvar clientOffset = this.ws.id+\"-\"+(counter++);\n        this.gbdataout = this.serial.readHex();\n\tthis.setState({\n\t\tgbdataout: this.gbdataout,\n\t\tstate: 1\n\t});\n\tconsole.log(\"Sending to other GB \"+this.gbdataout+\" from my GB...\");\n\tthis.ws.emit('message', { text:JSON.parse(this.gbdataout), name: 'GB'+this.ws.id, id: this.ws.id+\"\"+Math.random(), socketID: this.ws.id});\n        console.log(\"First Exchange : OK.\");\n\tthis.ws.on(\"message\", (msg, serverOffset) => {\n\t\tconsole.log(\"Got message \"+msg+\" from \"+serverOffset);\n\t\tthis.gbdatain = msg;\n\t\tthis.setState({\n\t\t\tgbdatain: msg\n\t\t});\n\t\tconsole.log(\"Communicating to my GB ...\");\n\t\tthis.serial.sendHex(this.gbdatain);\n\t\tthis.ws.auth.serverOffset = serverOffset;\n\t\tvar clientOffset = this.ws.id+\"-\"+(counter++);\n\t\tthis.gbdataout = this.serial.readHex();\n\t\tthis.setState({\n\t\t\tgbdataout: this.gbdataout\n\t\t});\n\t\tconsole.log(\"Sending to other GB \"+this.gbdataout+\" from my GB...\");\n\t\tthis.ws.emit('message', { text:JSON.parse(this.gbdataout), name: 'GB'+this.ws.id, id: this.ws.id+\"\"+Math.random(), socketID: this.ws.id});\n\t\tconsole.log(\"Exchange \"+counter+\" : OK.\");\n\t});\n  }\n  \n  render() {\n\tif(this.state === 0)\n               return (\n          \t<div className=\"connect\">\n            \t\t<button onClick={(e) => this.handleC()} className=\"btn btn-lg btn-secondary\">Host (Master)</button><br/>\n            \t\t<button onClick={(e) => this.handleJ()} className=\"btn btn-lg btn-secondary\">Connect (Client)</button>\n          \t</div>\n               )\n       else if(this.state === 1)\n\t\treturn (\n                <div className=\"connect\">\n\t                <h4>Connected => IN { this.gbdatain.toString() } OUT { this.gbdataout.toString() }</h4>\n                </div>\n               )\n   }\n}\n\n// ========================================\n\nReactDOM.render(\n  <OnlineGBGame />,\n  document.getElementById('root')\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}